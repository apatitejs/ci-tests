# Test against this version of Node.js
environment:
  nodejs_version: "6.10.2"

services:
  #- mssql2016
  #- postgresql94
  #- mysql

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version x64

  # Start Oracle Setup
  #- git clone https://github.com/apatitejs/appveyor-oracle-setup
  #- npm install ./appveyor-oracle-setup/
  #- md temp
  #- node ./appveyor-oracle-setup/app.js
  #- 7z.exe e "temp/ora11gr2setup.zip.001" -o"orasetup"
  #- orasetup\setup.exe /s /f1"%CD%\appveyor-oracle-setup\OracleXE-Install.iss" /f2"%CD%\orasetup\setup.log"
  #- PATH=C:\projects\apatite\oraxeinstall\app\oracle\product\11.2.0\server\bin;%PATH%
  #- SET OCI_LIB_DIR=C:\projects\apatite\oraxeinstall\app\oracle\product\11.2.0\server\oci\lib\msvc
  #- SET OCI_INC_DIR=C:\projects\apatite\oraxeinstall\app\oracle\product\11.2.0\server\oci\include
  #- cd appveyor-oracle-setup
  #- npm install oracledb@1.13.0
  #- node orasetup.js
  #- cd..
  # End Oracle Setup

  # install modules
  - npm install

before_test:
  #- sqlcmd -S localhost -U sa -P Password12! -Q "CREATE DATABASE apatite" -d "master"
  #- sqlcmd -S localhost -U sa -P Password12! -Q "CREATE LOGIN apatite WITH PASSWORD = 'Nodejs20090527!'" -d "apatite"
  #- sqlcmd -S localhost -U sa -P Password12! -Q "EXEC apatite..sp_addsrvrolemember @loginame = 'apatite', @rolename = 'sysadmin'" -d "apatite"
  #- npm install tedious@1.14.0
  #- npm install tedious-connection-pool@1.0.5
  #- SET PGUSER=postgres
  #- SET PGPASSWORD=Password12!
  #- PATH=C:\Program Files\PostgreSQL\9.4\bin\;%PATH%
  #- psql -c "DROP DATABASE IF EXISTS apatite;" -U postgres
  #- psql -c "CREATE DATABASE apatite;" -U postgres
  #- psql -c "CREATE USER apatite WITH PASSWORD 'Nodejs20090527!' SUPERUSER INHERIT CREATEDB CREATEROLE NOREPLICATION;" -U postgres
  #- npm install pg@6.0.0
  #- SET MYSQL_PWD=Password12!
  #- PATH=C:\Program Files\MySql\MySQL Server 5.7\bin\;%PATH%
  #- mysql -e "DROP DATABASE IF EXISTS apatite;" -uroot
  #- mysql -e "CREATE DATABASE apatite;" -uroot
  #- mysql -e "CREATE USER 'apatite'@'localhost' IDENTIFIED BY 'Nodejs20090527!';" -uroot
  #- mysql -e "GRANT ALL PRIVILEGES ON apatite.* TO 'apatite'@'localhost' WITH GRANT OPTION;" -uroot
  #- mysql -e "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';" -uroot
  #- npm install mysql@2.11.1
  #- npm install sqlite3@3.1.8

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - npm test

after_test:
  #- npm install istanbul@0.4.4
  #- npm install coveralls@2.11.9
  #- npm install mocha-lcov-reporter@1.2.0
  #- node_modules\.bin\istanbul cover node_modules\mocha\bin\_mocha --report lcovonly -- -R spec --recursive

# Don't actually build.
build: off

on_finish:
  - node --version
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))